{"version":3,"sources":["utils.js","App.js","constants.js","reportWebVitals.js","index.js"],"names":["getRandomArbitrary","min","max","Math","random","App","ref","useRef","videoRef","useState","width","setWidth","height","setHeight","parentLeft","setParentLeft","parentTop","setParentTop","dustSize","x","y","setDustPos","opacity","setOpacity","shouldShowDusty","setShowDusty","started","setStarted","started2","setStarted2","dustyLeft","dustyTop","handleMouseMove","useCallback","e","clientX","clientY","newDustX","newDustY","useEffect","current","offsetWidth","offsetHeight","rect","getBoundingClientRect","left","top","setTimeout","alternateVideo","commonStyle","position","class","className","onMouseMove","style","zIndex","autoplay","url","margin","playing","volume","muted","loop","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abfa9a5a.chunk.js","sourcesContent":["export function getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n}","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport ReactPlayer from \"react-player/vimeo\";\nimport { getRandomArbitrary } from \"./utils\";\nimport Square from \"./Square\";\nimport Dustball from \"./Dustball\";\nimport \"./App.css\";\n\nimport { videoURLs as videos, animationURL, projectURL } from \"./constants\";\n\nconst animationSpeed = 150;\n\nexport default function App() {\n  const ref = useRef();\n  const videoRef = useRef();\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [parentLeft, setParentLeft] = useState(0);\n  const [parentTop, setParentTop] = useState(0);\n  const [dustSize, setDustSize] = useState(20);\n  const [dustPos, setDustPos] = useState({ x: 0, y: 0 });\n  const [showSquares, setShowSquares] = useState(false);\n  const [opacity, setOpacity] = useState(0);\n  const [shouldShowDusty, setShowDusty] = useState(false);\n\n  const [started, setStarted] = useState(false);\n  const [started2, setStarted2] = useState(false);\n  const [dustyLeft, setDustyLeft] = useState(`${getRandomArbitrary(10, 90)}%`);\n  const [dustyTop, setDustyTop] = useState(`${getRandomArbitrary(10, 90)}%`);\n\n  const handleMouseMove = useCallback(\n    (e) => {\n      const x = e.clientX;\n      const y = e.clientY;\n      const newDustX = Math.min(x - parentLeft, width - dustSize);\n      const newDustY = Math.min(y - parentTop, height - dustSize);\n      setDustPos({\n        x: newDustX,\n        y: newDustY\n      });\n    },\n    [parentLeft, parentTop, dustSize]\n  );\n\n  const handleClick = () => {\n    if (!started) {\n      setStarted(true);\n      setShowDusty(false);\n      setTimeout(() => {\n        setStarted2(true);\n      }, 7000)\n    } else {\n      setShowDusty(false);\n      setStarted2(true);\n    }\n  };\n\n  useEffect(() => {\n    const width = ref.current.offsetWidth;\n    const height = ref.current.offsetHeight;\n    const rect = ref.current.getBoundingClientRect();\n    setParentLeft(rect.left);\n    setParentTop(rect.top);\n    setWidth(width);\n    setHeight(height);\n    setTimeout(() => {\n      setShowDusty(true);\n    }, 28000)\n  }, []);\n\n  const alternateVideo = useCallback(() => {\n    setTimeout(() => {\n      setOpacity(0.2);\n      setTimeout(() => {\n        setOpacity(0);\n        alternateVideo();\n      }, getRandomArbitrary(3000, 4000))\n    }, getRandomArbitrary(8000, 12000))\n  }, [])\n\n  // useEffect(() => {\n  //   const video = videoRef.current;\n  //   // Get access to the camera!\n  //   if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n  //     // Not adding `{ audio: true }` since we only want video now\n  //     navigator.mediaDevices.getUserMedia({ video: true }).then(function(stream) {\n  //         //video.src = window.URL.createObjectURL(stream);\n  //         video.srcObject = stream;\n  //         video.play();\n  //     });\n  //   }\n  //   alternateVideo();\n  // }, [])\n\n  const commonStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0\n  }\n\n  return (\n    <div class=\"app-root\">\n      <div className=\"demo0\" ref={ref} onMouseMove={handleMouseMove}>\n        <video\n          ref={videoRef} \n          class=\"video\" \n          width=\"50%\" \n          height=\"50%\"\n          style={{\n            position: \"absolute\",\n            top: \"40%\",\n            left: \"50%\",\n            zIndex: 3,\n            opacity: opacity\n          }} \n          autoplay\n        >\n        </video>\n        <ReactPlayer \n          width=\"75%\"\n          height=\"75%\"\n          url={projectURL}\n          style={{\n            ...commonStyle, \n            zIndex: 2,\n            margin: \"30px\",\n            opacity: started2 ? 1 : 0\n          }}\n          playing={started}\n          volume={1}\n        />\n        <ReactPlayer \n          width=\"100%\"\n          height=\"100%\"\n          url={animationURL}\n          style={{\n            ...commonStyle, zIndex: 0\n          }}\n          playing\n          muted\n          loop\n        />\n        {shouldShowDusty && \n          <div \n            className=\"dusty\" \n            onClick={handleClick}\n            style={{\n              left: dustyLeft,\n              top: dustyTop\n            }}>\n          </div>\n        }\n        {/* {started && videos.map((videoSrc, index) => (\n          <Square\n            key={videoSrc + index}\n            videoSrc={videoSrc}\n            width={width}\n            height={height}\n            animationSpeed={animationSpeed}\n            onMouseEnter={handleMouseEnter}\n            show={showSquares}\n          />\n        ))}\n        {started && <Dustball x={dustPos.x} y={dustPos.y} size={dustSize} />} */}\n      </div>\n    </div>\n  );\n}\n","export const githubMediaUrl = \"https://media.githubusercontent.com/media/nomrik/lcds/main\";\n\nexport const videoURLs = [\n    \"https://vimeo.com/523722737/332466a398\",\n    \"https://vimeo.com/523725045/b828788317\",\n    \"https://vimeo.com/523726526/4bf5f89e13\",\n    \"https://vimeo.com/523728447/68d7c908b8\",\n    \"https://vimeo.com/523729836/c3c618396b\",\n    \"https://vimeo.com/523731442/9aa1b3256e\",\n]\n\nexport const animationURL = \"https://vimeo.com/523997697/3129da299b\";\nexport const projectURL = \"https://vimeo.com/423548242\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}